name: profile on
on: workflow_dispatch
env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: eks-profile

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Maven test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      # - name: SonaQube Scan
      #   run: sonar-scanner
      #     -Dsonar.host.url=${{ secrets.SONAR_URL }}
      #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      #     -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      #     -Dsonar.projectkey=${{ secrets.SONAR_PROJECT_KEY }}
      #     -Dsonar.sources=src/
      #     -Dsonar.junit.reportsPath=target/surefire-reports/
      #     -Dsonar.jacoco.reportsPath=target/jacoco.exec
      #     -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
      #     #-Dsonar.java.binaries=target/test-classes/com/profile86/account
  BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          cache_from: ${{ secrets.cache }}
          repo: ${{ env.ECR_REPOSITORY }}
          region: ${{ env.AWS_REGION }}
          tags: latest. ${{ github.run_number }}
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./
